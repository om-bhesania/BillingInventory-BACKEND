{
  "name": "billing-inventory-app",
  "main": "app.ts",
  "type": "commonjs",
  "license": "ISC",
  "scripts": {
    "start": "node dist/src/server.js",
    "dev": "nodemon src/server.ts",
    "build": "tsc",
    "prod": "npm run build && npm start",
    "deploy": "npm run build && echo 'Build complete. Starting server...' && npm start",
    "pm2:start": "pm2 start ecosystem.config.js --env production",
    "pm2:restart": "pm2 restart bliss-server || pm2 start ecosystem.config.js --env production",
    "pm2:stop": "pm2 stop bliss-server || true",
    "pm2:delete": "pm2 delete bliss-server || true",
    "pm2:logs": "pm2 logs bliss-server",
    "pm2:list": "pm2 ls",
    "pm2:save": "pm2 save",
    "pm2:startup": "pm2-startup install",
    "setup": "ts-node setup.ts",
    "role": "ts-node setupRoles.ts",
    "migrate:shopIds": "ts-node src/scripts/migrateShopIds.ts",
    "migrate": "prisma migrate dev",
    "generate": "prisma generate",
    "push": "prisma db push",
    "db:setup": "npm run generate && npm run db:deploy && npm run role && npm run db:seed",
    "db:reset": "prisma migrate reset --force && npm run generate && npm run role && npm run db:seed",
    "db:deploy": "prisma migrate deploy",
    "db:status": "prisma migrate status",
    "db:seed": "ts-node src/scripts/seedDatabase.ts",
    "db:backup": "ts-node src/scripts/backupDatabase.ts",
    "db:restore": "ts-node src/scripts/restoreDatabase.ts",
    "db:studio": "prisma studio",
    "db:format": "prisma format",
    "db:validate": "prisma validate",
    "db:diff": "prisma migrate diff --from-empty --to-schema-datamodel prisma/schema.prisma",
    "db:diff:prod": "prisma migrate diff --from-migrations prisma/migrations --to-schema-datamodel prisma/schema.prisma",
    "db:diff:local": "prisma migrate diff --from-schema-datamodel prisma/schema.prisma --to-url $DATABASE_URL",
    "db:create": "ts-node src/scripts/createDatabase.ts",
    "db:cleanup": "ts-node src/scripts/cleanupOrphanedData.ts",
    "env:setup": "ts-node src/scripts/setupEnvironment.ts"
  },
  "version": "1.0.0",
  "dependencies": {
    "@aws-sdk/client-sesv2": "^3.888.0",
    "@prisma/client": "^6.8.1",
    "@types/ioredis": "^4.28.10",
    "@types/multer": "^2.0.0",
    "@types/nodemailer": "^7.0.1",
    "@types/socket.io": "^3.0.1",
    "bcrypt": "^5.1.1",
    "bcryptjs": "^3.0.2",
    "console-log-colors": "^0.5.0",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "crypto": "^1.0.1",
    "dotenv": "^16.5.0",
    "express": "^5.1.0",
    "ioredis": "^5.7.0",
    "jsonwebtoken": "^9.0.2",
    "multer": "^2.0.2",
    "nodemailer": "^7.0.6",
    "nodemon": "^3.1.10",
    "pg": "^8.16.3",
    "socket.io": "^4.8.1",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@types/bcryptjs": "^2.4.6",
    "@types/cookie-parser": "^1.4.9",
    "@types/cors": "^2.8.17",
    "@types/express": "^5.0.1",
    "@types/jsonwebtoken": "^9.0.9",
    "@types/node": "^22.15.3",
    "@types/pg": "^8.15.5",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.8",
    "prisma": "^6.13.0",
    "supabase": "^2.48.3",
    "ts-node-dev": "^2.0.0",
    "typescript": "^5.8.3"
  }
}
